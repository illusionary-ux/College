// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Full Version"

// DATE "10/24/2024 17:08:09"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module E3_74153 (
	\OUTPUT ,
	C,
	B,
	A);
output 	\OUTPUT ;
input 	C;
input 	B;
input 	A;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \OUTPUT~output_o ;
wire \C~input_o ;
wire \A~input_o ;
wire \B~input_o ;
wire \inst|9~0_combout ;


cyclonev_io_obuf \OUTPUT~output (
	.i(\inst|9~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\OUTPUT~output_o ),
	.obar());
// synopsys translate_off
defparam \OUTPUT~output .bus_hold = "false";
defparam \OUTPUT~output .open_drain_output = "false";
defparam \OUTPUT~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \A~input (
	.i(A),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\A~input_o ));
// synopsys translate_off
defparam \A~input .bus_hold = "false";
defparam \A~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \B~input (
	.i(B),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\B~input_o ));
// synopsys translate_off
defparam \B~input .bus_hold = "false";
defparam \B~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst|9~0 (
// Equation(s):
// \inst|9~0_combout  = (!\C~input_o  & (\A~input_o  & \B~input_o )) # (\C~input_o  & ((\B~input_o ) # (\A~input_o )))

	.dataa(!\C~input_o ),
	.datab(!\A~input_o ),
	.datac(!\B~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst|9~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst|9~0 .extended_lut = "off";
defparam \inst|9~0 .lut_mask = 64'h1717171717171717;
defparam \inst|9~0 .shared_arith = "off";
// synopsys translate_on

assign \OUTPUT  = \OUTPUT~output_o ;

endmodule
